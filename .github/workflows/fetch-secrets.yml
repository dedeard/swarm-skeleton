name: Fetch Secrets from Azure Key Vault

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to use (staging or production)'
        required: true
        type: string
    outputs:
      acr_login_server:
        description: 'Azure Container Registry login server'
        value: ${{ jobs.fetch-secrets.outputs.acr_login_server }}
      api_url:
        description: 'Backend API URL'
        value: ${{ jobs.fetch-secrets.outputs.api_url }}

jobs:
  fetch-secrets:
    name: Fetch Secrets from Azure Key Vault
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      acr_login_server: ${{ steps.get-secrets.outputs.acr-login-server }}
      api_url: ${{ steps.get-secrets.outputs.api-url }}
      
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          # This uses OIDC authentication with GitHub Actions
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: 'OIDC'

      # Determine which key vault to use based on environment
      - name: Set Key Vault Name
        id: set-keyvault
        run: |
          if [ "${{ inputs.environment }}" == "production" ]; then
            echo "keyvault_name=${{ secrets.PRODUCTION_KEY_VAULT_NAME }}" >> $GITHUB_OUTPUT
          else
            echo "keyvault_name=${{ secrets.STAGING_KEY_VAULT_NAME }}" >> $GITHUB_OUTPUT
          fi

      - name: Get Key Vault Secrets
        id: get-secrets
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ steps.set-keyvault.outputs.keyvault_name }}
          secrets: 'acr-login-server, acr-username, acr-password, api-url, supabase-service-role-key, supabase-access-token'
          
      # Set secrets as both outputs (for workflow_call) and environment variables (for current workflow)
      - name: Set environment variables
        run: |
          echo "ACR_LOGIN_SERVER=${{ steps.get-secrets.outputs.acr-login-server }}" >> $GITHUB_ENV
          echo "ACR_USERNAME=${{ steps.get-secrets.outputs.acr-username }}" >> $GITHUB_ENV
          echo "ACR_PASSWORD=${{ steps.get-secrets.outputs.acr-password }}" >> $GITHUB_ENV
          echo "API_URL=${{ steps.get-secrets.outputs.api-url }}" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ steps.get-secrets.outputs.supabase-service-role-key }}" >> $GITHUB_ENV
          echo "SUPABASE_ACCESS_TOKEN=${{ steps.get-secrets.outputs.supabase-access-token }}" >> $GITHUB_ENV
